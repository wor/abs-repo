# Maintainer: Esa Määttä <esa.maatta@iki.fi>
# version 0.9 of mercurial repo build script
# TODO: make custom config file replacer more dynamic

pkgname=dwm-hg
pkgver=1606
pkgrel=1
arch=('x86_64' 'i686')
pkgdesc="A dynamic window manager for X11."
url="http://www.suckless.org/dwm"
makedepends=('libx11' 'mercurial' 'patch')
license=('MIT/X')
source=('view_change.patch' 'dwm-6.1-current_desktop.patch' 'dwm-6.1-netwmdesktop.patch')
md5sums=('3f4e6c058e499d86d9b67878908a1a14'
         '90113a04d949bed1f37aa576b792656b'
         '5b37d9c623e34c45dfa59d86050ca6ef')
#export pkgver=1507

# custom config file in $startdir that replaces dwm default config.h
_configfile=config.wor.h

_hgrepo="dwm"
_hgroot="http://code.suckless.org/hg/"

_patch_source()
{
    local ii
    for i in "${@}"; do
        ((ii=i+1))
        msg "Applying patch $ii: ${source[i]}";
        patch -p1 <../${source[i]} || { echo "patch ${source[i]} failed."; return 1; }
    done
}

build()
{
  # makepkg script takes care of checkouting hg repo
  cd "$srcdir/$_hgrepo"
  # hg revert -a -r 1507
  #export pkgver=1507
  #echo "------ $pkgver"

  [ -d "$srcdir/$_hgrepo-build" ] && rm -r "$srcdir/$_hgrepo-build"
  cp -r "$srcdir/$_hgrepo" "$srcdir/$_hgrepo-build"
  cd "$srcdir/$_hgrepo-build"

  # PATCH

  _patch_source 0 1 2
  # patch to put all non X hint windows to floating mode (like vlc)
  #i=0; ((ii=i+1)); msg "Applying patch $ii: ${source[i]}"; patch -p1 <../${source[i]} || { echo "patch ${source[i]} failed."; return 1; }
  #msg "Applying patch 2: autorize" # XXX: what is this for
  #msg "autoresize disabled: is it really needed: http://dwm.suckless.org/patches/autoresize"
  # i=1; patch -p1 <../${source[i]} || { echo "patch ${source[i]} failed."; exit 1; }
  #i=1; ((ii=i+1)); msg "Applying patch $ii: ${source[i]}"; patch -p1 <../${source[i]} || { echo "patch ${source[i]} failed."; return 1; }
  #msg "Applying patch 4: disable mouse focus"
  #i=3; patch -p1 <../${source[i]} || { echo "patch ${source[i]} failed."; exit 1; }
  #unset i ii

  # if custom config.h provided use it
  if [ -f "${startdir}/${_configfile}" ]; then
    msg "Using custom config file: ${_configfile} from ${startdir}"
    cp -f "${startdir}/${_configfile}" ./config.h
  elif [ -f "./${_configfile}" ]; then
    cp -f "${_configfile}" ./config.h
    msg "Using custom config file: ${_configfile} from $(pwd)"
  fi

  msg "Modifying config.mk"
  prefix="/usr"
  CFLAGS="${CFLAGS} -fwhole-program -std=c99 -Wall"

  #------------#---1---##-----2-----##---3--#
  sed -i -r "s#(^PREFIX)([ ]*[=][ ]*)([^\n]*)#\1\2${prefix}#" ./config.mk

  # Inserting LIBDIR and INCDIR variables, after MANPREFIX
  sed -i -r 's#(^MANPREFIX)([^\n]*)#\1\2\nLIBDIR = ${PREFIX}/lib\nINCDIR = ${PREFIX}/include#' ./config.mk

  # X11INC and X11LIB
  sed -i -r 's#(^X11INC)([ ]*[=][ ]*)([^\n]*)#\1\2${INCDIR}/X11#' ./config.mk
  sed -i -r 's#(^X11LIB)([ ]*[=][ ]*)([^\n]*)#\1\2${LIBDIR}/X11#' ./config.mk

  # disable XINERAMA
  sed -i -r 's|^(XINERAMA)|#\1|' ./config.mk

  # Append INCDIR to INCS
  sed -i -r 's#(^INCS *=.*)#\1 -I${INCDIR}#' ./config.mk

  # CFLAGS
  sed -i -r "s#(^CFLAGS)([ ]*[=][ ]*)([^ $]*)([^\n]*)#\1\2${CFLAGS}\4#" ./config.mk
  # LDFLAGS here if needed

  # remove -Os from CFLAGS
  sed -i 's#-Os ##' ./config.mk

  # change compiler from cc (gcc) to clang
  # sed -i -r 's#^(CC = )cc$#\1clang#' ./config.mk

  msg "Starting make..."
  make clean || return 1
  make || return 1
  make DESTDIR=$startdir/pkg install
}
