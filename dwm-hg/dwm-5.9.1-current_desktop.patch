diff --git a/dwm.c b/dwm.c
--- a/dwm.c
+++ b/dwm.c
@@ -58,7 +58,8 @@
 enum { CurNormal, CurResize, CurMove, CurLast };        /* cursor */
 enum { ColBorder, ColFG, ColBG, ColLast };              /* color */
 enum { NetSupported, NetWMName, NetWMState,
-       NetWMFullscreen, NetActiveWindow, NetLast };     /* EWMH atoms */
+       NetWMFullscreen, NetActiveWindow,
+       NetNumberOfDesktops, NetCurrentDesktop, NetLast };     /* EWMH atoms */
 enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; /* default atoms */
 enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,
        ClkClientWin, ClkRootWin, ClkLast };             /* clicks */
@@ -214,6 +215,7 @@
 static void setfocus(Client *c);
 static void setlayout(const Arg *arg);
 static void setmfact(const Arg *arg);
+static void setnumbdesktops(void);
 static void setup(void);
 static void showhide(Client *c);
 static void sigchld(int unused);
@@ -229,6 +231,7 @@
 static void unfocus(Client *c, Bool setfocus);
 static void unmanage(Client *c, Bool destroyed);
 static void unmapnotify(XEvent *e);
+static void updatecurrenddesktop(void);
 static Bool updategeom(void);
 static void updatebarpos(Monitor *m);
 static void updatebars(void);
@@ -1463,6 +1466,13 @@
 }
 
 void
+setcurrentdesktop(void){
+        long data[] = { 0 };
+        XChangeProperty(dpy, root, netatom[NetCurrentDesktop], XA_CARDINAL, 32,
+                        PropModeReplace, (unsigned char *)data, 1);
+}
+
+void
 setclientstate(Client *c, long state) {
 	long data[] = { state, None };
 
@@ -1529,6 +1539,13 @@
 }
 
 void
+setnumbdesktops(void){
+        long data[] = { TAGMASK };
+        XChangeProperty(dpy, root, netatom[NetNumberOfDesktops], XA_CARDINAL, 32,
+                        PropModeReplace, (unsigned char *)data, 1);
+}
+
+void
 setup(void) {
 	XSetWindowAttributes wa;
 
@@ -1553,6 +1570,8 @@
 	netatom[NetWMName] = XInternAtom(dpy, "_NET_WM_NAME", False);
 	netatom[NetWMState] = XInternAtom(dpy, "_NET_WM_STATE", False);
 	netatom[NetWMFullscreen] = XInternAtom(dpy, "_NET_WM_STATE_FULLSCREEN", False);
+	netatom[NetNumberOfDesktops] = XInternAtom(dpy, "_NET_NUMBER_OF_DESKTOPS", False);
+	netatom[NetCurrentDesktop] = XInternAtom(dpy, "_NET_CURRENT_DESKTOP", False);
 	/* init cursors */
 	cursor[CurNormal] = XCreateFontCursor(dpy, XC_left_ptr);
 	cursor[CurResize] = XCreateFontCursor(dpy, XC_sizing);
@@ -1575,6 +1594,10 @@
 	/* EWMH support per view */
 	XChangeProperty(dpy, root, netatom[NetSupported], XA_ATOM, 32,
 			PropModeReplace, (unsigned char *) netatom, NetLast);
+	/* set EWMH NUMBER_OF_DESKTOPS */
+	setnumbdesktops();
+	/* initialize EWMH CURRENT_DESKTOP */
+	setcurrentdesktop();
 	/* select for events */
 	wa.cursor = cursor[CurNormal];
 	wa.event_mask = SubstructureRedirectMask|SubstructureNotifyMask|ButtonPressMask
@@ -1720,6 +1743,7 @@
 		focus(NULL);
 		arrange(selmon);
 	}
+	updatecurrenddesktop();
 }
 
 void
@@ -1799,6 +1823,14 @@
 		m->by = -bh;
 }
 
+void
+updatecurrenddesktop(){
+	long data[] = { selmon->tagset[selmon->seltags] };
+
+	XChangeProperty(dpy, root, netatom[NetCurrentDesktop], XA_CARDINAL, 32,
+			PropModeReplace, (unsigned char *)data, 1);
+}
+
 Bool
 updategeom(void) {
 	Bool dirty = False;
@@ -1989,6 +2021,7 @@
 		selmon->tagset[selmon->seltags] = arg->ui & TAGMASK;
 	focus(NULL);
 	arrange(selmon);
+	updatecurrenddesktop();
 }
 
 Client *
